{"version":3,"file":"static/js/729.f2b015fc.chunk.js","mappings":"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","sources":["components/customInput/CustomInput.js","pages/authentication/Authentication.js","pages/login/Login.js","pages/registration/Registration.js","services/firebase.js"],"sourcesContent":["import { useField } from \"formik\";\r\n\r\nfunction CustomInput(props) {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <input {...props} {...field} />\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CustomInput;\r\n","import { useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { registration, login } from \"../../services/firebase\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nimport Login from \"../login/Login\";\r\nimport Registration from \"../registration/Registration\";\r\n\r\nimport \"./authentication.scss\";\r\nimport \"./authenticationMedia.scss\";\r\n\r\nfunction Authentication({ dataType, Component }) {\r\n  const [error, setError] = useState(false);\r\n  const navigate = useNavigate();\r\n  const { dispatch } = useContext(AuthContext);\r\n\r\n  const onSubmitForm = async ({ name = \"\", email, password }) => {\r\n    try {\r\n      let res = null;\r\n\r\n      if (dataType === \"login\") {\r\n        res = await login(email, password);\r\n      } else {\r\n        res = await registration(name, email, password);\r\n      }\r\n\r\n      // set current user\r\n      dispatch({ type: \"LOGIN\", payload: res.user.uid });\r\n      navigate(\"/\");\r\n    } catch {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"authentication\">\r\n      <Component\r\n        error={error}\r\n        setError={setError}\r\n        onSubmitForm={onSubmitForm}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nAuthentication.propTypes = {\r\n  dataType: PropTypes.string,\r\n  Component: PropTypes.oneOfType([\r\n    PropTypes.objectOf(Login),\r\n    PropTypes.objectOf(Registration),\r\n  ]).isRequired,\r\n};\r\n\r\nAuthentication.defaultProps = {\r\n  dataType: \"login\",\r\n};\r\n\r\nexport default Authentication;\r\n","import { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Form } from \"formik\";\r\nimport PropTypes from \"prop-types\";\r\nimport CustomInput from \"../../components/customInput/CustomInput\";\r\n\r\nfunction Login({ error, setError, onSubmitForm }) {\r\n  useEffect(() => {\r\n    setError(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\",\r\n        }}\r\n        onSubmit={(data) => {\r\n          onSubmitForm(data);\r\n        }}\r\n      >\r\n        <Form className=\"form\">\r\n          <CustomInput type=\"email\" name=\"email\" placeholder=\"Почта\" />\r\n          <CustomInput\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Пароль\"\r\n            autoComplete=\"on\"\r\n          />\r\n          <div className=\"wrapper\">\r\n            <button type=\"submit\" className=\"btn btn-dark\">\r\n              Войти\r\n            </button>\r\n            <Link to=\"/registration\">Регистрация</Link>\r\n          </div>\r\n          {error ? (\r\n            <div className=\"error\">Почта или пароль введены неверно!</div>\r\n          ) : null}\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nLogin.propTypes = {\r\n  error: PropTypes.bool,\r\n  setError: PropTypes.func,\r\n  onSubmitForm: PropTypes.func,\r\n};\r\n\r\nLogin.defaultProps = {\r\n  error: false,\r\n  setError: () => {},\r\n  onSubmitForm: () => {},\r\n};\r\n\r\nexport default Login;\r\n","import { useEffect } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { object, string } from \"yup\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CustomInput from \"../../components/customInput/CustomInput\";\r\n\r\nfunction Registration({ error, setError, onSubmitForm }) {\r\n  useEffect(() => {\r\n    setError(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"registration\">\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n        }}\r\n        validationSchema={object({\r\n          name: string()\r\n            .min(2, \"Минимум 2 символа!\")\r\n            .required(\"Обязательное поле!\"),\r\n          email: string()\r\n            .email(\"Неправильный адрес почты!\")\r\n            .required(\"Обязательное поле!\"),\r\n          password: string()\r\n            .min(6, \"Минимум 6 символов!\")\r\n            .required(\"Обязательное поле!\"),\r\n        })}\r\n        onSubmit={(data) => {\r\n          onSubmitForm(data);\r\n        }}\r\n      >\r\n        <Form className=\"form\">\r\n          <CustomInput type=\"text\" name=\"name\" placeholder=\"Имя\" />\r\n          <CustomInput type=\"email\" name=\"email\" placeholder=\"Почта\" />\r\n          <CustomInput\r\n            type=\"text\"\r\n            name=\"password\"\r\n            placeholder=\"Пароль\"\r\n            autoComplete=\"on\"\r\n          />\r\n          <div className=\"wrapper\">\r\n            <button type=\"submit\" className=\"btn btn-dark\">\r\n              Зарегистрироваться\r\n            </button>\r\n            <Link to=\"/login\">Вход</Link>\r\n          </div>\r\n          {error ? (\r\n            <div className=\"error\">Произошла ошибка. Попробуйте еще раз</div>\r\n          ) : null}\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nRegistration.propTypes = {\r\n  error: PropTypes.bool,\r\n  setError: PropTypes.func,\r\n  onSubmitForm: PropTypes.func,\r\n};\r\n\r\nRegistration.defaultProps = {\r\n  error: false,\r\n  setError: () => {},\r\n  onSubmitForm: () => {},\r\n};\r\n\r\nexport default Registration;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  getDocs,\r\n  doc,\r\n  getDoc,\r\n  query,\r\n  where,\r\n  setDoc,\r\n  addDoc,\r\n  updateDoc,\r\n  serverTimestamp,\r\n} from \"firebase/firestore\";\r\nimport {\r\n  getStorage,\r\n  ref,\r\n  uploadBytes,\r\n  getDownloadURL,\r\n  deleteObject,\r\n} from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: \"meditation-b02d2.firebaseapp.com\",\r\n  projectId: \"meditation-b02d2\",\r\n  storageBucket: \"meditation-b02d2.appspot.com\",\r\n  messagingSenderId: \"69484463235\",\r\n  appId: \"1:69484463235:web:12f03ae9d88e84728587b6\",\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst auth = getAuth();\r\nconst storage = getStorage();\r\n\r\n// auth\r\n\r\nexport const registration = async (name, email, password) => {\r\n  const res = await createUserWithEmailAndPassword(auth, email, password);\r\n  await setDoc(doc(db, \"users\", res.user.uid), {\r\n    name,\r\n    email,\r\n    password,\r\n    timeStamp: serverTimestamp(),\r\n  });\r\n  return res;\r\n};\r\n\r\nexport const login = async (email, password) => {\r\n  const res = await signInWithEmailAndPassword(auth, email, password);\r\n  return res;\r\n};\r\n\r\n// lessons\r\n\r\nconst getDataLesson = (dataLesson) => {\r\n  const lesson = dataLesson.data();\r\n  return {\r\n    id: dataLesson.id,\r\n    number: lesson.number,\r\n    name: lesson.name,\r\n    thumbnail: lesson.thumbnail,\r\n    complete: lesson.complete,\r\n  };\r\n};\r\n\r\nconst getCompleteLessons = async (userId) => {\r\n  const lessons = [];\r\n\r\n  const progressQuery = query(\r\n    collection(db, \"user_progress\"),\r\n    where(\"userId\", \"==\", userId),\r\n  );\r\n  const userProgress = await getDocs(progressQuery);\r\n\r\n  userProgress.forEach((data) => {\r\n    lessons.push(data.data().lessonId);\r\n  });\r\n\r\n  return lessons;\r\n};\r\n\r\nconst getLessons = async () => {\r\n  const list = [];\r\n  const lessons = await getDocs(collection(db, \"lessons\"));\r\n  lessons.forEach((data) => {\r\n    list.push(getDataLesson(data));\r\n  });\r\n\r\n  return list;\r\n};\r\n\r\nexport const getAllLessons = async (userId) => {\r\n  const lessons = await getLessons();\r\n  const completeLessons = await getCompleteLessons(userId);\r\n  const list = lessons.map((lesson) => {\r\n    if (completeLessons.includes(lesson.id)) {\r\n      return { ...lesson, complete: true };\r\n    }\r\n    return lesson;\r\n  });\r\n\r\n  list.sort((a, b) => (a.number > b.number ? 1 : -1));\r\n  return list;\r\n};\r\n\r\nexport const getLesson = async (id) => {\r\n  const docRef = doc(db, \"lessons\", id);\r\n  const docSnap = await getDoc(docRef);\r\n  return docSnap.data();\r\n};\r\n\r\nexport const setCompleteLesson = async (userId, lessonId, complete) => {\r\n  if (complete) {\r\n    return;\r\n  }\r\n\r\n  await addDoc(collection(db, \"user_progress\"), {\r\n    userId,\r\n    lessonId,\r\n    complete: true,\r\n    timeStamp: serverTimestamp(),\r\n  });\r\n};\r\n\r\n// timer\r\n\r\nexport const saveMeditationTime = async (userId, seconds) => {\r\n  await addDoc(collection(db, \"meditation_time\"), {\r\n    userId,\r\n    seconds,\r\n    timeStamp: serverTimestamp(),\r\n  });\r\n};\r\n\r\n// user data\r\n\r\nconst getUserRef = (userId) => {\r\n  return doc(db, \"users\", userId);\r\n};\r\n\r\nexport const uploadFile = async (file, name) => {\r\n  const storageRef = ref(storage, name);\r\n  const url = await uploadBytes(storageRef, file)\r\n    .then((res) => getDownloadURL(res.ref))\r\n    .catch(() => {\r\n      return \"\";\r\n    });\r\n  return url;\r\n};\r\n\r\nexport const getUserData = async (userId) => {\r\n  const userRef = getUserRef(userId);\r\n  const docSnap = await getDoc(userRef);\r\n  return docSnap.data();\r\n};\r\n\r\nexport const meditationTime = async (userId) => {\r\n  let time = 0;\r\n\r\n  const timeQuery = query(\r\n    collection(db, \"meditation_time\"),\r\n    where(\"userId\", \"==\", userId),\r\n  );\r\n  const userTime = await getDocs(timeQuery);\r\n\r\n  userTime.forEach((data) => {\r\n    time += data.data().seconds;\r\n  });\r\n\r\n  // convert sec to min\r\n  time = Math.floor(time / 60);\r\n\r\n  return time;\r\n};\r\n\r\nexport const allUserData = async (userId) => {\r\n  const dataUser = await getUserData(userId);\r\n  const time = await meditationTime(userId);\r\n\r\n  return { ...dataUser, time };\r\n};\r\n\r\nexport const changeUserPhoto = async (userId, file, name) => {\r\n  try {\r\n    const { pathPhoto } = await getUserData(userId);\r\n    const userRef = getUserRef(userId);\r\n\r\n    // upload user photo to storage\r\n    const url = await uploadFile(file, name);\r\n    if (!url) {\r\n      return \"\";\r\n    }\r\n\r\n    // set the photo url and path to data user\r\n    await updateDoc(userRef, {\r\n      photo: url,\r\n      pathPhoto: name,\r\n    });\r\n\r\n    // remove old photo\r\n    if (pathPhoto) {\r\n      const oldPhotoRef = ref(storage, pathPhoto);\r\n      await deleteObject(oldPhotoRef);\r\n    }\r\n    return url;\r\n  } catch {\r\n    return \"\";\r\n  }\r\n};\r\n"],"names":["props","useField","field","meta","touched","error","className","Authentication","dataType","Component","useState","setError","navigate","useNavigate","dispatch","useContext","AuthContext","onSubmitForm","name","email","password","res","login","registration","type","payload","user","uid","defaultProps","Login","useEffect","initialValues","onSubmit","data","placeholder","autoComplete","to","Registration","validationSchema","object","string","min","required","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","auth","getAuth","storage","getStorage","createUserWithEmailAndPassword","setDoc","doc","timeStamp","serverTimestamp","signInWithEmailAndPassword","getDataLesson","dataLesson","lesson","id","number","thumbnail","complete","getCompleteLessons","userId","lessons","progressQuery","query","collection","where","getDocs","forEach","push","lessonId","getLessons","list","getAllLessons","completeLessons","map","includes","sort","a","b","getLesson","docRef","getDoc","docSnap","setCompleteLesson","addDoc","saveMeditationTime","seconds","getUserRef","uploadFile","file","storageRef","ref","uploadBytes","then","getDownloadURL","catch","url","getUserData","userRef","meditationTime","time","timeQuery","Math","floor","allUserData","dataUser","changeUserPhoto","pathPhoto","updateDoc","photo","oldPhotoRef","deleteObject"],"sourceRoot":""}