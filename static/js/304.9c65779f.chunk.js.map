{"version":3,"file":"static/js/304.9c65779f.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.js","hooks/useFetch.js","pages/singleLesson/SingleLesson.js","services/firebase.js","utils/setContent.js"],"sourcesContent":["import error from \"../../resources/img/error.png\";\r\nimport \"./errorMessage.scss\";\r\n\r\nfunction ErrorMessage() {\r\n  return (\r\n    <div className=\"error\">\r\n      <img src={error} alt=\"error\" className=\"error__img\" />\r\n      <p className=\"error__text\">Что-то пошло не так...</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import { useState } from \"react\";\r\n\r\nfunction useFetch(callback) {\r\n  const [process, setProcess] = useState(\"loading\");\r\n\r\n  const fetching = async () => {\r\n    setProcess(\"loading\");\r\n    try {\r\n      await callback();\r\n    } catch {\r\n      setProcess(\"error\");\r\n    }\r\n  };\r\n\r\n  return [fetching, process, setProcess];\r\n}\r\n\r\nexport default useFetch;\r\n","import { useEffect, useState, useMemo, useContext } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport parse from \"html-react-parser\";\r\n\r\nimport { getLesson, setCompleteLesson } from \"../../services/firebase\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport setContent from \"../../utils/setContent\";\r\n\r\nimport \"./singleLesson.scss\";\r\nimport \"./singleLessonMedia.scss\";\r\n\r\nfunction SingleLesson() {\r\n  const [data, setData] = useState(null);\r\n  const [savingProgress, setSavingProgress] = useState(false);\r\n\r\n  const { id } = useParams();\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [getDataLesson, process, setProcess] = useFetch(() =>\r\n    // eslint-disable-next-line no-use-before-define\r\n    getLesson(id).then(onDataLoaded),\r\n  );\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const onDataLoaded = (lesson) => {\r\n    if (lesson) {\r\n      setData(lesson);\r\n      setProcess(\"confirmed\");\r\n    } else {\r\n      setProcess(\"error\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDataLesson();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  const saveAndCloseLesson = async (path) => {\r\n    setSavingProgress(true);\r\n    await setCompleteLesson(currentUser, id, data.complete);\r\n    setSavingProgress(false);\r\n    navigate(path);\r\n  };\r\n\r\n  const startMeditation = () => {\r\n    saveAndCloseLesson(\"/timer\");\r\n  };\r\n\r\n  const completeLesson = () => {\r\n    saveAndCloseLesson(\"/lessons\");\r\n  };\r\n\r\n  const renderItems = () => {\r\n    if (data) {\r\n      const { name, desc } = data;\r\n      const content = parse(desc);\r\n\r\n      return (\r\n        <div className=\"single-lesson__content\">\r\n          <h2 className=\"single-lesson__title\">{name}</h2>\r\n          <div className=\"single-lesson__desc\">{content}</div>\r\n          <div className=\"single-lesson__btns\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-dark\"\r\n              disabled={savingProgress}\r\n              onClick={startMeditation}\r\n            >\r\n              Начать медитацию\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn\"\r\n              disabled={savingProgress}\r\n              onClick={completeLesson}\r\n            >\r\n              Завершить урок\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const elements = useMemo(() => {\r\n    return setContent(process, () => renderItems(data));\r\n    // eslint-disable-next-line\r\n  }, [process, savingProgress]);\r\n\r\n  return <div className=\"single-lesson\">{elements}</div>;\r\n}\r\n\r\nexport default SingleLesson;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  getDocs,\r\n  doc,\r\n  getDoc,\r\n  query,\r\n  where,\r\n  setDoc,\r\n  addDoc,\r\n  updateDoc,\r\n  serverTimestamp,\r\n} from \"firebase/firestore\";\r\nimport {\r\n  getStorage,\r\n  ref,\r\n  uploadBytes,\r\n  getDownloadURL,\r\n  deleteObject,\r\n} from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: \"meditation-b02d2.firebaseapp.com\",\r\n  projectId: \"meditation-b02d2\",\r\n  storageBucket: \"meditation-b02d2.appspot.com\",\r\n  messagingSenderId: \"69484463235\",\r\n  appId: \"1:69484463235:web:12f03ae9d88e84728587b6\",\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst auth = getAuth();\r\nconst storage = getStorage();\r\n\r\n// auth\r\n\r\nexport const registration = async (name, email, password) => {\r\n  const res = await createUserWithEmailAndPassword(auth, email, password);\r\n  await setDoc(doc(db, \"users\", res.user.uid), {\r\n    name,\r\n    email,\r\n    password,\r\n    timeStamp: serverTimestamp(),\r\n  });\r\n  return res;\r\n};\r\n\r\nexport const login = async (email, password) => {\r\n  const res = await signInWithEmailAndPassword(auth, email, password);\r\n  return res;\r\n};\r\n\r\n// lessons\r\n\r\nconst getDataLesson = (dataLesson) => {\r\n  const lesson = dataLesson.data();\r\n  return {\r\n    id: dataLesson.id,\r\n    number: lesson.number,\r\n    name: lesson.name,\r\n    thumbnail: lesson.thumbnail,\r\n    complete: lesson.complete,\r\n  };\r\n};\r\n\r\nconst getCompleteLessons = async (userId) => {\r\n  const lessons = [];\r\n\r\n  const progressQuery = query(\r\n    collection(db, \"user_progress\"),\r\n    where(\"userId\", \"==\", userId),\r\n  );\r\n  const userProgress = await getDocs(progressQuery);\r\n\r\n  userProgress.forEach((data) => {\r\n    lessons.push(data.data().lessonId);\r\n  });\r\n\r\n  return lessons;\r\n};\r\n\r\nconst getLessons = async () => {\r\n  const list = [];\r\n  const lessons = await getDocs(collection(db, \"lessons\"));\r\n  lessons.forEach((data) => {\r\n    list.push(getDataLesson(data));\r\n  });\r\n\r\n  return list;\r\n};\r\n\r\nexport const getAllLessons = async (userId) => {\r\n  const lessons = await getLessons();\r\n  const completeLessons = await getCompleteLessons(userId);\r\n  const list = lessons.map((lesson) => {\r\n    if (completeLessons.includes(lesson.id)) {\r\n      return { ...lesson, complete: true };\r\n    }\r\n    return lesson;\r\n  });\r\n\r\n  list.sort((a, b) => (a.number > b.number ? 1 : -1));\r\n  return list;\r\n};\r\n\r\nexport const getLesson = async (id) => {\r\n  const docRef = doc(db, \"lessons\", id);\r\n  const docSnap = await getDoc(docRef);\r\n  return docSnap.data();\r\n};\r\n\r\nexport const setCompleteLesson = async (userId, lessonId, complete) => {\r\n  if (complete) {\r\n    return;\r\n  }\r\n\r\n  await addDoc(collection(db, \"user_progress\"), {\r\n    userId,\r\n    lessonId,\r\n    complete: true,\r\n    timeStamp: serverTimestamp(),\r\n  });\r\n};\r\n\r\n// timer\r\n\r\nexport const saveMeditationTime = async (userId, seconds) => {\r\n  await addDoc(collection(db, \"meditation_time\"), {\r\n    userId,\r\n    seconds,\r\n    timeStamp: serverTimestamp(),\r\n  });\r\n};\r\n\r\n// user data\r\n\r\nconst getUserRef = (userId) => {\r\n  return doc(db, \"users\", userId);\r\n};\r\n\r\nexport const uploadFile = async (file, name) => {\r\n  const storageRef = ref(storage, name);\r\n  const url = await uploadBytes(storageRef, file)\r\n    .then((res) => getDownloadURL(res.ref))\r\n    .catch(() => {\r\n      return \"\";\r\n    });\r\n  return url;\r\n};\r\n\r\nexport const getUserData = async (userId) => {\r\n  const userRef = getUserRef(userId);\r\n  const docSnap = await getDoc(userRef);\r\n  return docSnap.data();\r\n};\r\n\r\nexport const meditationTime = async (userId) => {\r\n  let time = 0;\r\n\r\n  const timeQuery = query(\r\n    collection(db, \"meditation_time\"),\r\n    where(\"userId\", \"==\", userId),\r\n  );\r\n  const userTime = await getDocs(timeQuery);\r\n\r\n  userTime.forEach((data) => {\r\n    time += data.data().seconds;\r\n  });\r\n\r\n  // convert sec to min\r\n  time = Math.floor(time / 60);\r\n\r\n  return time;\r\n};\r\n\r\nexport const allUserData = async (userId) => {\r\n  const dataUser = await getUserData(userId);\r\n  const time = await meditationTime(userId);\r\n\r\n  return { ...dataUser, time };\r\n};\r\n\r\nexport const changeUserPhoto = async (userId, file, name) => {\r\n  try {\r\n    const { pathPhoto } = await getUserData(userId);\r\n    const userRef = getUserRef(userId);\r\n\r\n    // upload user photo to storage\r\n    const url = await uploadFile(file, name);\r\n    if (!url) {\r\n      return \"\";\r\n    }\r\n\r\n    // set the photo url and path to data user\r\n    await updateDoc(userRef, {\r\n      photo: url,\r\n      pathPhoto: name,\r\n    });\r\n\r\n    // remove old photo\r\n    if (pathPhoto) {\r\n      const oldPhotoRef = ref(storage, pathPhoto);\r\n      await deleteObject(oldPhotoRef);\r\n    }\r\n    return url;\r\n  } catch {\r\n    return \"\";\r\n  }\r\n};\r\n","import Spinner from \"../components/spinner/Spinner\";\r\nimport ErrorMessage from \"../components/errorMessage/ErrorMessage\";\r\n\r\nconst setContent = (process, Component, data) => {\r\n  switch (process) {\r\n    case \"loading\":\r\n      return <Spinner />;\r\n    case \"confirmed\":\r\n      return <Component data={data} />;\r\n    case \"error\":\r\n      return <ErrorMessage />;\r\n    default:\r\n      throw new Error(\"Unexpected process state\");\r\n  }\r\n};\r\n\r\nexport default setContent;\r\n"],"names":["className","src","error","alt","callback","useState","process","setProcess","fetching","data","setData","savingProgress","setSavingProgress","id","useParams","currentUser","useContext","AuthContext","useFetch","getLesson","then","onDataLoaded","getDataLesson","navigate","useNavigate","lesson","useEffect","saveAndCloseLesson","path","setCompleteLesson","complete","startMeditation","completeLesson","elements","useMemo","setContent","name","desc","content","parse","type","disabled","onClick","renderItems","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","auth","getAuth","storage","getStorage","registration","email","password","createUserWithEmailAndPassword","res","setDoc","doc","user","uid","timeStamp","serverTimestamp","login","signInWithEmailAndPassword","dataLesson","number","thumbnail","getCompleteLessons","userId","lessons","progressQuery","query","collection","where","getDocs","forEach","push","lessonId","getLessons","list","getAllLessons","completeLessons","map","includes","sort","a","b","docRef","getDoc","docSnap","addDoc","saveMeditationTime","seconds","getUserRef","uploadFile","file","storageRef","ref","uploadBytes","getDownloadURL","catch","url","getUserData","userRef","meditationTime","time","timeQuery","Math","floor","allUserData","dataUser","changeUserPhoto","pathPhoto","updateDoc","photo","oldPhotoRef","deleteObject","Component","Error"],"sourceRoot":""}